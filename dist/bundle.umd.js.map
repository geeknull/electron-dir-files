{"version":3,"file":"bundle.umd.js","sources":["../src/fakeBrowserFile.js","../src/fakeBrowserDir.js","../src/index.js"],"sourcesContent":["let fs = window.require('fs');\nlet path = window.require('path');\nlet mime = require('mime-types');\n\nlet FakeBrowserFile = class {\n  constructor(filePathAbs, rootDirAbs, rootDirRel) {\n    this.path = filePathAbs;\n    this._path = filePathAbs;\n    this.fd = null;\n    this.status = 'init';\n    this.open();\n    this.close();\n    this.isDirectory = false;\n    if (this.status !== 'success') {\n      return void 0;\n    } // TODO throw\n    this.stats = fs.statSync(this._path); // TODO try\n\n    this.lastModified = new Date(this.stats.mtime).getTime();\n    this.lastModifiedDate = new Date(this.lastModified);\n    this.name = path.basename(this._path);\n    this.path // already do\n    this.size = this.stats.size;\n    this.type = mime.lookup(this.name);\n    this.webkitRelativePath = rootDirRel + this._path.replace(rootDirAbs, '');\n  }\n\n  open() {\n    try {\n      this.fd = fs.openSync(path.resolve(this._path), 'r');\n      this.status = 'success';\n    } catch (err) {\n      this.status = 'error';\n    }\n  }\n\n  openFile(_p) {\n    let fd = null;\n    try {\n      fd = fs.openSync(path.resolve(_p), 'r');\n    } catch (e) {}\n    return fd\n  }\n\n  closeFile(df) {\n    try {\n      df && fs.closeSync(fd);\n    } catch (e) {}\n  }\n\n  slice(start, end) {\n    // let fileBolb = fs.readSync(this.fd, buf, 0, len, start);\n    return {\n      toBlob: () => new Promise((resolve, reject) => {\n        let len = end - start;\n        let buf = Buffer.alloc(len);\n        let fd = this.openFile(this._path); // TODO error null throw\n        fs.read(fd, buf, 0, len, start, (err, bytesRead, buffer) => {\n          let blob = new Blob([buffer]);\n          resolve(blob);\n          this.closeFile(fd);\n        });\n      })\n    }\n  }\n\n  close() {\n    fs.closeSync(this.fd);\n  }\n\n  toBlob() {\n    // let buf = fs.readFileSync(this.path);\n    return new Promise((resolve, reject) => {\n      fs.readFile(this._path, (err, data) => {\n        let blob = new Blob([data], {type: this.type});\n        resolve(blob);\n      });\n    });\n  }\n};\n\nmodule.exports = FakeBrowserFile;\n","let FakeBrowserDir = class {\n  constructor (filePathAbs, rootDirAbs, rootDirRel) {\n    this.path = filePathAbs;\n    this._path = filePathAbs;\n    this.webkitRelativePath = rootDirRel + this._path.replace(rootDirAbs, '');\n    this.isDirectory = true;\n  }\n};\n\nmodule.exports = FakeBrowserDir;\n","let remote = window.require('electron').remote;\nlet fs = window.require('fs');\nlet path = window.require('path');\nlet dialog = remote.dialog;\nlet FakeBrowserFile = require('./fakeBrowserFile.js');\nlet FakeBrowserDir = require('./fakeBrowserDir.js');\n\n// get selected dir\nlet getDirPaths = () =>  {\n  return dialog.showOpenDialog(remote.getCurrentWindow(), {\n    properties: ['openDirectory'] // file is openFile\n  });\n};\n\nlet childFileOrDir = (filePath, files) => {\n  return new Promise((resolve, reject) => {\n    fs.stat(filePath, async (err, stat) => {\n      if (stat.isDirectory()) {\n        await readDir(filePath, files);\n        resolve();\n      } else {\n        files.push(filePath);\n        resolve();\n      }\n    })\n  });\n};\n\nlet childIsDir = (filePath) => {\n  return new Promise((resolve, reject) => {\n    fs.stat(filePath, async (err, stat) => {\n      let isDir = stat.isDirectory();\n      resolve(isDir);\n    })\n  })\n};\n\nlet readDir = (dir, files) => {\n  return new Promise((resolve, reject) => {\n    fs.readdir(dir, async (err, _files) => {\n      for (let file of _files) {\n        let filePath = path.join(dir, file);\n        let isDir = await childIsDir(filePath);\n        if (isDir) {\n          await readDir(filePath, files);\n        } else {\n          files.push(filePath);\n        }\n      }\n      resolve();\n    });\n  })\n};\n\nlet getFiles = (_path) => {\n  return new Promise(async (resolve, reject) => {\n    let files = [];\n    await readDir(_path, files);\n    resolve(files);\n  });\n};\n\nlet getBrowserFiles = async () => {\n  let paths = await getDirPaths();\n  if (!paths) {\n    return void 0;\n  }\n\n  let rootDirAbs = paths[0];\n  let filesPath = await getFiles(rootDirAbs);\n\n  let rootDirPre = rootDirAbs.replace(rootDirAbs.split(path.sep).pop(), '');\n  let rootDirRel = rootDirAbs.replace(rootDirPre, '');\n\n  let files = filesPath.map((_path) => {\n    return new FakeBrowserFile(_path, rootDirAbs, rootDirRel);\n  });\n\n  return files;\n};\nmodule.exports = getBrowserFiles;\nmodule.exports.FakeBrowserFile = FakeBrowserFile;\n\n/*************** new api ***************/ \n\nlet pathIsDirSync = filePathAbs => {\n  // TODO try\n  let stat = fs.statSync(filePathAbs);\n  if (stat.isDirectory()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nlet readDirSync = function* (parentPathAbs, rootDirAbs, rootDirRel) {\n  let childPathsAbs = fs.readdirSync(parentPathAbs);\n  if (childPathsAbs) {\n    for (let i = 0, len = childPathsAbs.length; i < len; i++) {\n      let filePathAbs = path.join(parentPathAbs, childPathsAbs[i]);\n      if (pathIsDirSync(filePathAbs)) {\n        yield new FakeBrowserDir(filePathAbs, rootDirAbs, rootDirRel);\n        yield* readDirSync(filePathAbs, rootDirAbs, rootDirRel);\n      } else {\n        yield new FakeBrowserFile(filePathAbs, rootDirAbs, rootDirRel);\n      }\n    }\n  }\n};\n\nlet readDirGen = function* (){\n  yield* readDirSync(selectDirAbsolutePath, selectDirAbsolutePath, selectDirRelativePath);\n};\n\nlet getBrowserFilesGen = function* () {\n  let selectDirAbsolutePath = null;\n  let selectDirRelativePath = null;\n  let selectDirPreviousPath = null;\n\n  let newSelectDirRelativePath = yield getDirPaths().then((selectDirs) => {\n    // get absolute dir path, if not select is undefined\n    selectDirAbsolutePath = selectDirs ? selectDirs[0] : selectDirs;\n\n    // get relative path, previous path\n    if (selectDirAbsolutePath) {\n      selectDirPreviousPath = selectDirAbsolutePath.replace(selectDirAbsolutePath.split(path.sep).pop(), '');\n      selectDirRelativePath = selectDirAbsolutePath.replace(selectDirPreviousPath, '');\n    }\n    return {selectDirAbsolutePath, selectDirRelativePath};\n  });\n\n  if (!selectDirAbsolutePath) {return void 0;} // if not selected dir return\n\n  // support custom config selectDirRealtivePath\n  if (newSelectDirRelativePath) {\n    selectDirRelativePath = newSelectDirRelativePath;\n  }\n  // yield {selectDirAbsolutePath, selectDirRelativePath};\n\n  \n  yield* readDirSync(selectDirAbsolutePath, selectDirAbsolutePath, selectDirRelativePath);\n}\n\n\ngetBrowserFiles.getBrowserFilesGen = getBrowserFilesGen;\n\nlet getBrowserFilesGen2 = async(p) => {\n  let selectDirAbsolutePath = null;\n  let selectDirRelativePath = null;\n  let selectDirPreviousPath = null;\n\n  let selectDirs = await getDirPaths();\n  selectDirAbsolutePath = selectDirs ? selectDirs[0] : selectDirs;\n  if (selectDirAbsolutePath) {\n    selectDirPreviousPath = selectDirAbsolutePath.replace(selectDirAbsolutePath.split(path.sep).pop(), '');\n    selectDirRelativePath = selectDirAbsolutePath.replace(selectDirPreviousPath, '');\n  }\n  return p({selectDirAbsolutePath, selectDirRelativePath});\n  // return {selectDirAbsolutePath, selectDirRelativePath};\n};\n\ngetBrowserFiles.getBrowserFilesGen = getBrowserFilesGen;\n"],"names":["fs","window","require","path","FakeBrowserFile","filePathAbs","rootDirAbs","rootDirRel","_path","fd","status","open","close","isDirectory","stats","statSync","lastModified","Date","mtime","getTime","lastModifiedDate","name","basename","size","type","mime","lookup","webkitRelativePath","replace","openSync","resolve","err","_p","e","df","closeSync","start","end","Promise","reject","len","buf","Buffer","alloc","openFile","read","bytesRead","buffer","blob","Blob","closeFile","readFile","data","FakeBrowserDir","remote","dialog","getDirPaths","showOpenDialog","getCurrentWindow","childIsDir","filePath","stat","isDir","readDir","dir","files","readdir","_files","join","file","push","getFiles","getBrowserFiles","paths","split","sep","pop","rootDirPre","filesPath","map","pathIsDirSync","readDirSync","parentPathAbs","readdirSync","childPathsAbs","length","i","readDirGen","selectDirAbsolutePath","selectDirRelativePath","getBrowserFilesGen","then","selectDirs","selectDirPreviousPath","newSelectDirRelativePath","getBrowserFilesGen2","p"],"mappings":"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"}